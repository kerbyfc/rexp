// Generated by CoffeeScript 1.4.0
(function() {
  var Rexp, minimatch;

  minimatch = require('minimatch');

  Rexp = (function() {

    function Rexp() {}

    Rexp.prototype.defaults = {
      dot: false
    };

    Rexp.prototype.shutdown = function(msg) {
      console.error(msg);
      return process.exit(0);
    };

    Rexp.prototype.create = function(pattern, options) {
      var fIndex;
      if (options == null) {
        options = {};
      }
      if (pattern instanceof RegExp || pattern === null) {
        return pattern;
      } else if (typeof pattern === 'string') {
        if (!pattern.length) {
          return null;
        }
        try {
          if ((pattern.match(/^r\/.*\/([igm]*)?$/) != null) && (fIndex = pattern.lastIndexOf('/'))) {
            return new RegExp(pattern.substr(2, fIndex - 3), pattern.substring(fIndex + 1));
          } else {
            return minimatch.makeRe(pattern, options);
          }
        } catch (e) {
          return this.shutdown("Pattern `" + pattern + "` is invalid. " + e.message);
        }
      } else {
        return this.shutdown("Expected <string> minimatch pattern or r/<regexp string>/<regexp flags>. <" + (typeof pattern) + "> " + pattern + " given");
      }
    };

    return Rexp;

  })();

  module.exports = new Rexp;

}).call(this);
